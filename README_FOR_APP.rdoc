= Tour Scheduler

== Task Description

Create this simple Rails application (sinatra or any other rack framework is also acceptable). Write functional code in the most efficient
manner and with your best workmanship. Do not worry about how long this takes you; focus on showing us clear logic, best practices and your
methodologies/design patterns – your choice of these is part of the review process. Don't try to future-proof the app, either.
We're fans of simple, concise code. As always, security is an issue.
You're building a website that has a "tour scheduling" feature:

1. User requests a tour, and provides their email address. We send an activation email.
2. User clinks link in activation email, which takes them to a form where they enter their first name, last name and phone number.  When submitting that, they're shown another form.
3. This form asks for some extra details: preferred tour date, additional questions (nothing fancy, a basic string will work), and asks them to choose a list of amenities they're interested in (use this list for demonstration purposes: "pool", "rec room", "movie theater", "on site doctor", "time machine").
4. Once this last form is submitted they should be presented with a success screen and a confirmation email should be sent to the user.  A "New Tour Scheduled" email should be delivered to tours@example.com with the users information, their requested tour information and the IP address used to request the tour.
5. If the user clicks the same link again, they should be presented with their already submitted data (except the ip address), with an opportunity to rate their experience at the tour on a scale of 1-5.

Views don't need to be styled in any way; plain HTML elements with no CSS at all is fine. You can use whatever gems or plugins you want.

When you're done, put it on GitHub as an app that we can run. If you need a private repo for this test let us know and we can provide one.

Include a readme with whatever it takes to get it up and running.

== Setup

This app uses the default Rails 3.2.6 database, MySQL, and a unique database user and password.

  mysql -u root -p
  mysql> create database tour_scheduler_development;
  mysql> create database tour_scheduler_test;
  mysql> create database tour_scheduler_production;
  mysql> create user 'tour_dbworker'@'localhost' identified by 'tour_secret';
  mysql> grant all on tour_scheduler_development.* to 'tour_dbworker'@'localhost';
  mysql> grant all on tour_scheduler_test.* to 'tour_dbworker'@'localhost';
  mysql> grant all on tour_scheduler_production.* to 'tour_dbworker'@'localhost';

=== Define these environment variables

I never check sensitive data into GitHub, so the app uses environment variables.  I usually store these in a safe place, like ~/.ssh/ or any directory protected 700.
You will need to adjust the environment variables for your environment.

  cat ~/.ssh/.tour_setup.sh
  # MySQL settings
  export TOUR_SCHEDULER_DBUSER='tour_dbworker'
  export TOUR_SCHEDULER_DBPASS='tour_secret'
  export TOUR_SCHEDULER_DEVELOPMENT_DBNAME='tour_scheduler_development'
  export TOUR_SCHEDULER_TEST_DBNAME='tour_scheduler_test'
  export TOUR_SCHEDULER_PRODUCTION_DBNAME='tour_scheduler_production'

  # ActionMailer settings
  export TOUR_EMAILER_SMTP_ADDRESS='smtp.gmail.com'
  export TOUR_EMAILER_SMTP_PORT=587
  export TOUR_EMAILER_SMTP_DOMAIN='jelmorrill.com'
  export TOUR_EMAILER_SMTP_AUTHENTICATION='login'
  export TOUR_EMAILER_SMTP_USER_NAME='jelmorrill@gmail.com'
  export TOUR_EMAILER_SMTP_PASSWORD='xxxxxxxxxxxxxxxxxxxxxx'
  export TOUR_EMAILER_SMTP_TLSAUTO='true'

  source ~/.ssh/.tour_setup.sh

=== Run the migrations

  rake db:migrate

=== Start the Thin webserver

  rails s
